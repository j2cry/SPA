package ru.bioresourceslab;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class AddSampleUI extends JDialog {
    private JButton cancelButton;
    private JButton okButton;
    private JPanel addPanel;
    private JTextArea inputArea;

    private boolean succeed;
//    final Logger log = Logger.getLogger("SPA Logger");


    public AddSampleUI(Frame owner, boolean modal) {
        super(owner, modal);
        this.setContentPane(addPanel);
        this.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        pack();

        // loading icon
        Image titleIcon = Toolkit.getDefaultToolkit().createImage(getClass().getClassLoader().getResource("addSample16.png"));
        setIconImage(titleIcon);
        this.setTitle("Добавление в список...");
        succeed = false;

        okButton.addActionListener(e -> {
            succeed = true;
            setVisible(false);
            dispose();
        });

        cancelButton.addActionListener(e -> {
            succeed = false;
            setVisible(false);
            dispose();
        });
    }

    public boolean showModal() {
        this.setVisible(true);
        return !inputArea.getText().equals("") & succeed;
    }

    public ArrayList<Sample> getData() {
        ArrayList<Sample> dataList = new ArrayList<>();
        String[] input = inputArea.getText().split("\n");
        String[] loc = {"0", "0", "0", "0", "0"};

        if (input.length == 0) return null;
        for (String row : input) {
            if (row.equals("")) continue;
            // get code & location
            String[] sample = row.split(" ", 2);
            if (sample.length == 2) {       // do this if location is specified
                int i = 0;
                StringTokenizer sc = new StringTokenizer(sample[1], ".");
                while (sc.hasMoreTokens()) {
                    loc[i++] = sc.nextToken();
                }
            } // end if
            dataList.add(new Sample(sample[0], loc[0], loc[1], loc[2], loc[3], loc[4]));//*/
        } // end for

        return dataList;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        addPanel = new JPanel();
        addPanel.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        addPanel.setPreferredSize(new Dimension(200, 120));
        final JScrollPane scrollPane1 = new JScrollPane();
        addPanel.add(scrollPane1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        inputArea = new JTextArea();
        scrollPane1.setViewportView(inputArea);
        okButton = new JButton();
        okButton.setText("OK");
        addPanel.add(okButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        addPanel.add(cancelButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return addPanel;
    }

}
